aleksey@first:~/OtusTeam/IaC/general/yc_serverless_container/nginx$ tf validate
Success! The configuration is valid.


aleksey@first:~/OtusTeam/IaC/general/yc_serverless_container/nginx$ 
aleksey@first:~/OtusTeam/IaC/general/yc_serverless_container/nginx$ tf apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.nginx[0] will be created
  + resource "yandex_compute_instance" "nginx" {
      + created_at                = (known after apply)
      + folder_id                 = "b1gmesrdjgklgkvcp704"
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "docker-container-declaration" = <<-EOT
                spec:
                  containers:
                  - name: nginx
                    image: cr.yandex/crpgqba9ldgbfg8ad8j0/nginx
                  restartPolicy: Always
            EOT
          + "serial-port-enable"           = "0"
          + "ssh-keys"                     = "aleksey:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCewj3O2osKw0rnOybUkYE6OwayOiEU5blxv+HfmATGt2tzcrQPROuILpaMXIlmlcEgPx1BFowQOS+/Ajhtxphd1p0YpLqvZGrUQd9/1kIoKd5E6FnXrG3O7apX0Bjj12MSDwuPMYWLlQ1OR4m7sIw3blzl+Y0RcLqZZpX+xs9u9fguEE34rSC7X9/cfYysTAfZk86W5C6XiXK5twah75Z+Jka02+hPlR3KkNA3ti70rWIbx83RPue3Bx8GNCYeK5h2ah7a3B/0GTxgyzA4WpBizpHygTnfN5lBlIpcYYf2RFzJxG686d6fkJHlWTZgp8Mei2hEukhfkxtZFc1Z5OhRDsY1EeNOXbtkyR9P8BNvCHNQvnZEmVH76DNZ2cdNaz8ANHBrAWO4c2lptPwpELHZVJbafzNRs3aT0QMtK57gES8CF7hmk8J6Gk3PDwmONTLsMIfqmgahLRFEL4Wbgs2eZqQ3suFSJSEHKaY3gzueKDxApVCmmfWs2ZhfkH9xtNM= aleksey@first"
          + "user-data"                    = <<-EOT
                #cloud-config
                datasource:
                  Ec2:
                    strict_id: false
                ssh_pwauth: no
                users:
                - name: aleksey
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  shell: /bin/bash
                  ssh_authorized_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCewj3O2osKw0rnOybUkYE6OwayOiEU5blxv+HfmATGt2tzcrQPROuILpaMXIlmlcEgPx1BFowQOS+/Ajhtxphd1p0YpLqvZGrUQd9/1kIoKd5E6FnXrG3O7apX0Bjj12MSDwuPMYWLlQ1OR4m7sIw3blzl+Y0RcLqZZpX+xs9u9fguEE34rSC7X9/cfYysTAfZk86W5C6XiXK5twah75Z+Jka02+hPlR3KkNA3ti70rWIbx83RPue3Bx8GNCYeK5h2ah7a3B/0GTxgyzA4WpBizpHygTnfN5lBlIpcYYf2RFzJxG686d6fkJHlWTZgp8Mei2hEukhfkxtZFc1Z5OhRDsY1EeNOXbtkyR9P8BNvCHNQvnZEmVH76DNZ2cdNaz8ANHBrAWO4c2lptPwpELHZVJbafzNRs3aT0QMtK57gES8CF7hmk8J6Gk3PDwmONTLsMIfqmgahLRFEL4Wbgs2eZqQ3suFSJSEHKaY3gzueKDxApVCmmfWs2ZhfkH9xtNM= aleksey@first
            EOT
        }
      + name                      = "compute-vm-2-2-15-hdd-1724833002696"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v3"
      + service_account_id        = "ajeps61531r8losd5k2d"
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = "READ_WRITE"

          + initialize_params {
              + block_size  = 4096
              + description = (known after apply)
              + image_id    = "fd8qinf7qa7mmmhe6i8g"
              + name        = (known after apply)
              + size        = 15
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + metadata_options (known after apply)

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = "e9bop98iu12teftg4uj8"
        }

      + placement_policy (known after apply)

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

yandex_compute_instance.nginx[0]: Creating...
yandex_compute_instance.nginx[0]: Still creating... [10s elapsed]
yandex_compute_instance.nginx[0]: Still creating... [20s elapsed]
yandex_compute_instance.nginx[0]: Still creating... [30s elapsed]
yandex_compute_instance.nginx[0]: Still creating... [40s elapsed]
yandex_compute_instance.nginx[0]: Creation complete after 44s [id=fhmuukkvq8rae69f0ko9]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
aleksey@first:~/OtusTeam/IaC/general/yc_serverless_container/nginx$ curl http://84.201.175.73
<html>
  <body>
    <h1>Hello World!</h1>
  </body>
</html>
aleksey@first:~/OtusTeam/IaC/general/yc_serverless_container/nginx$ tf destroy
yandex_compute_instance.nginx[0]: Refreshing state... [id=fhmuukkvq8rae69f0ko9]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # yandex_compute_instance.nginx[0] will be destroyed
  - resource "yandex_compute_instance" "nginx" {
      - created_at                = "2024-08-28T17:22:32Z" -> null
      - folder_id                 = "b1gmesrdjgklgkvcp704" -> null
      - fqdn                      = "fhmuukkvq8rae69f0ko9.auto.internal" -> null
      - id                        = "fhmuukkvq8rae69f0ko9" -> null
      - labels                    = {} -> null
      - metadata                  = {
          - "docker-container-declaration" = <<-EOT
                spec:
                  containers:
                  - name: nginx
                    image: cr.yandex/crpgqba9ldgbfg8ad8j0/nginx
                  restartPolicy: Always
            EOT
          - "serial-port-enable"           = "0"
          - "ssh-keys"                     = "aleksey:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCewj3O2osKw0rnOybUkYE6OwayOiEU5blxv+HfmATGt2tzcrQPROuILpaMXIlmlcEgPx1BFowQOS+/Ajhtxphd1p0YpLqvZGrUQd9/1kIoKd5E6FnXrG3O7apX0Bjj12MSDwuPMYWLlQ1OR4m7sIw3blzl+Y0RcLqZZpX+xs9u9fguEE34rSC7X9/cfYysTAfZk86W5C6XiXK5twah75Z+Jka02+hPlR3KkNA3ti70rWIbx83RPue3Bx8GNCYeK5h2ah7a3B/0GTxgyzA4WpBizpHygTnfN5lBlIpcYYf2RFzJxG686d6fkJHlWTZgp8Mei2hEukhfkxtZFc1Z5OhRDsY1EeNOXbtkyR9P8BNvCHNQvnZEmVH76DNZ2cdNaz8ANHBrAWO4c2lptPwpELHZVJbafzNRs3aT0QMtK57gES8CF7hmk8J6Gk3PDwmONTLsMIfqmgahLRFEL4Wbgs2eZqQ3suFSJSEHKaY3gzueKDxApVCmmfWs2ZhfkH9xtNM= aleksey@first"
          - "user-data"                    = <<-EOT
                #cloud-config
                datasource:
                  Ec2:
                    strict_id: false
                ssh_pwauth: no
                users:
                - name: aleksey
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  shell: /bin/bash
                  ssh_authorized_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCewj3O2osKw0rnOybUkYE6OwayOiEU5blxv+HfmATGt2tzcrQPROuILpaMXIlmlcEgPx1BFowQOS+/Ajhtxphd1p0YpLqvZGrUQd9/1kIoKd5E6FnXrG3O7apX0Bjj12MSDwuPMYWLlQ1OR4m7sIw3blzl+Y0RcLqZZpX+xs9u9fguEE34rSC7X9/cfYysTAfZk86W5C6XiXK5twah75Z+Jka02+hPlR3KkNA3ti70rWIbx83RPue3Bx8GNCYeK5h2ah7a3B/0GTxgyzA4WpBizpHygTnfN5lBlIpcYYf2RFzJxG686d6fkJHlWTZgp8Mei2hEukhfkxtZFc1Z5OhRDsY1EeNOXbtkyR9P8BNvCHNQvnZEmVH76DNZ2cdNaz8ANHBrAWO4c2lptPwpELHZVJbafzNRs3aT0QMtK57gES8CF7hmk8J6Gk3PDwmONTLsMIfqmgahLRFEL4Wbgs2eZqQ3suFSJSEHKaY3gzueKDxApVCmmfWs2ZhfkH9xtNM= aleksey@first
            EOT
        } -> null
      - name                      = "compute-vm-2-2-15-hdd-1724833002696" -> null
      - network_acceleration_type = "standard" -> null
      - platform_id               = "standard-v3" -> null
      - service_account_id        = "ajeps61531r8losd5k2d" -> null
      - status                    = "running" -> null
      - zone                      = "ru-central1-a" -> null
        # (4 unchanged attributes hidden)

      - boot_disk {
          - auto_delete = true -> null
          - device_name = "fhmii7e65d53qjc8h5m6" -> null
          - disk_id     = "fhmii7e65d53qjc8h5m6" -> null
          - mode        = "READ_WRITE" -> null

          - initialize_params {
              - block_size  = 4096 -> null
              - image_id    = "fd8qinf7qa7mmmhe6i8g" -> null
                name        = null
              - size        = 15 -> null
              - type        = "network-hdd" -> null
                # (2 unchanged attributes hidden)
            }
        }

      - metadata_options {
          - aws_v1_http_endpoint = 1 -> null
          - aws_v1_http_token    = 2 -> null
          - gce_http_endpoint    = 1 -> null
          - gce_http_token       = 1 -> null
        }

      - network_interface {
          - index              = 0 -> null
          - ip_address         = "10.128.0.12" -> null
          - ipv4               = true -> null
          - ipv6               = false -> null
          - mac_address        = "d0:0d:1e:f5:29:fd" -> null
          - nat                = true -> null
          - nat_ip_address     = "84.201.175.73" -> null
          - nat_ip_version     = "IPV4" -> null
          - security_group_ids = [] -> null
          - subnet_id          = "e9bop98iu12teftg4uj8" -> null
            # (1 unchanged attribute hidden)
        }

      - placement_policy {
          - host_affinity_rules       = [] -> null
          - placement_group_partition = 0 -> null
            # (1 unchanged attribute hidden)
        }

      - resources {
          - core_fraction = 100 -> null
          - cores         = 2 -> null
          - gpus          = 0 -> null
          - memory        = 2 -> null
        }

      - scheduling_policy {
          - preemptible = false -> null
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

yandex_compute_instance.nginx[0]: Destroying... [id=fhmuukkvq8rae69f0ko9]
yandex_compute_instance.nginx[0]: Still destroying... [id=fhmuukkvq8rae69f0ko9, 10s elapsed]
yandex_compute_instance.nginx[0]: Still destroying... [id=fhmuukkvq8rae69f0ko9, 20s elapsed]
yandex_compute_instance.nginx[0]: Still destroying... [id=fhmuukkvq8rae69f0ko9, 30s elapsed]
yandex_compute_instance.nginx[0]: Still destroying... [id=fhmuukkvq8rae69f0ko9, 40s elapsed]
yandex_compute_instance.nginx[0]: Still destroying... [id=fhmuukkvq8rae69f0ko9, 50s elapsed]
yandex_compute_instance.nginx[0]: Still destroying... [id=fhmuukkvq8rae69f0ko9, 1m0s elapsed]
yandex_compute_instance.nginx[0]: Destruction complete after 1m3s

Destroy complete! Resources: 1 destroyed.
