aleksey@first:~/OtusTeam/IaC/general/argocd/mini/docker$ ansible-playbook nginx1_build_deployment.yml 

PLAY [Build and deploy nginx1 to minikube, run and destroy demo] *****************************************************************************************************************************************************************

TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [Check the status of minikube.] *********************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [Start minikube if it's not running.] ***************************************************************************************************************************************************************************************
skipping: [ac-mini-docker]

TASK [Delete Nginx existing service and deployment] ******************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Wait for 5 seconds] ********************************************************************************************************************************************************************************************************
Pausing for 5 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ac-mini-docker]

TASK [Remove existing Nginx image] ***********************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Create index.html from template on remote host] ****************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [Copy nginx.conf to remote host] ********************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [Copy Dockerfile to remote host] ********************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [Build Nginx image] *********************************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Create Nginx deployment] ***************************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Wait for 15 seconds] *******************************************************************************************************************************************************************************************************
Pausing for 15 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ac-mini-docker]

TASK [Get Nginx deployment info] *************************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [debug] *********************************************************************************************************************************************************************************************************************
ok: [ac-mini-docker] => {
    "msg": "[]\n"
}

TASK [Get Nginx pod info] ********************************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [debug] *********************************************************************************************************************************************************************************************************************
ok: [ac-mini-docker] => {
    "msg": "-   apiVersion: v1\n    kind: Pod\n    metadata:\n        creationTimestamp: '2024-09-17T07:30:51Z'\n        generateName: nginx1-7bb68ffbbc-\n        labels:\n            app: nginx1\n            pod-template-hash: 7bb68ffbbc\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:generateName: {}\n                    f:labels:\n                        .: {}\n                        f:app: {}\n                        f:pod-template-hash: {}\n                    f:ownerReferences:\n                        .: {}\n                        k:{\"uid\":\"8ad2b673-4577-49d0-9b3c-9040079b4d7a\"}: {}\n                f:spec:\n                    f:containers:\n                        k:{\"name\":\"nginx1\"}:\n                            .: {}\n                            f:image: {}\n                            f:imagePullPolicy: {}\n                            f:name: {}\n                            f:ports:\n                                .: {}\n                                k:{\"containerPort\":80,\"protocol\":\"TCP\"}:\n                                    .: {}\n                                    f:containerPort: {}\n                                    f:protocol: {}\n                            f:resources: {}\n                            f:terminationMessagePath: {}\n                            f:terminationMessagePolicy: {}\n                    f:dnsPolicy: {}\n                    f:enableServiceLinks: {}\n                    f:restartPolicy: {}\n                    f:schedulerName: {}\n                    f:securityContext: {}\n                    f:terminationGracePeriodSeconds: {}\n            manager: kube-controller-manager\n            operation: Update\n            time: '2024-09-17T07:30:51Z'\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:status:\n                    f:conditions:\n                        k:{\"type\":\"ContainersReady\"}:\n                            .: {}\n                            f:lastProbeTime: {}\n                            f:lastTransitionTime: {}\n                            f:status: {}\n                            f:type: {}\n                        k:{\"type\":\"Initialized\"}:\n                            .: {}\n                            f:lastProbeTime: {}\n                            f:lastTransitionTime: {}\n                            f:status: {}\n                            f:type: {}\n                        k:{\"type\":\"PodReadyToStartContainers\"}:\n                            .: {}\n                            f:lastProbeTime: {}\n                            f:lastTransitionTime: {}\n                            f:status: {}\n                            f:type: {}\n                        k:{\"type\":\"Ready\"}:\n                            .: {}\n                            f:lastProbeTime: {}\n                            f:lastTransitionTime: {}\n                            f:status: {}\n                            f:type: {}\n                    f:containerStatuses: {}\n                    f:hostIP: {}\n                    f:hostIPs: {}\n                    f:phase: {}\n                    f:podIP: {}\n                    f:podIPs:\n                        .: {}\n                        k:{\"ip\":\"10.244.0.128\"}:\n                            .: {}\n                            f:ip: {}\n                    f:startTime: {}\n            manager: kubelet\n            operation: Update\n            subresource: status\n            time: '2024-09-17T07:31:01Z'\n        name: nginx1-7bb68ffbbc-49r99\n        namespace: default\n        ownerReferences:\n        -   apiVersion: apps/v1\n            blockOwnerDeletion: true\n            controller: true\n            kind: ReplicaSet\n            name: nginx1-7bb68ffbbc\n            uid: 8ad2b673-4577-49d0-9b3c-9040079b4d7a\n        resourceVersion: '446284'\n        uid: e3d30277-dc63-4bce-9cd4-9dbb725d8e3c\n    spec:\n        containers:\n        -   image: nginx1:1\n            imagePullPolicy: IfNotPresent\n            name: nginx1\n            ports:\n            -   containerPort: 80\n                protocol: TCP\n            resources: {}\n            terminationMessagePath: /dev/termination-log\n            terminationMessagePolicy: File\n            volumeMounts:\n            -   mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n                name: kube-api-access-ddhdg\n                readOnly: true\n        dnsPolicy: ClusterFirst\n        enableServiceLinks: true\n        nodeName: minikube\n        preemptionPolicy: PreemptLowerPriority\n        priority: 0\n        restartPolicy: Always\n        schedulerName: default-scheduler\n        securityContext: {}\n        serviceAccount: default\n        serviceAccountName: default\n        terminationGracePeriodSeconds: 30\n        tolerations:\n        -   effect: NoExecute\n            key: node.kubernetes.io/not-ready\n            operator: Exists\n            tolerationSeconds: 300\n        -   effect: NoExecute\n            key: node.kubernetes.io/unreachable\n            operator: Exists\n            tolerationSeconds: 300\n        volumes:\n        -   name: kube-api-access-ddhdg\n            projected:\n                defaultMode: 420\n                sources:\n                -   serviceAccountToken:\n                        expirationSeconds: 3607\n                        path: token\n                -   configMap:\n                        items:\n                        -   key: ca.crt\n                            path: ca.crt\n                        name: kube-root-ca.crt\n                -   downwardAPI:\n                        items:\n                        -   fieldRef:\n                                apiVersion: v1\n                                fieldPath: metadata.namespace\n                            path: namespace\n    status:\n        conditions:\n        -   lastProbeTime: null\n            lastTransitionTime: '2024-09-17T07:31:01Z'\n            status: 'True'\n            type: PodReadyToStartContainers\n        -   lastProbeTime: null\n            lastTransitionTime: '2024-09-17T07:30:51Z'\n            status: 'True'\n            type: Initialized\n        -   lastProbeTime: null\n            lastTransitionTime: '2024-09-17T07:31:01Z'\n            status: 'True'\n            type: Ready\n        -   lastProbeTime: null\n            lastTransitionTime: '2024-09-17T07:31:01Z'\n            status: 'True'\n            type: ContainersReady\n        -   lastProbeTime: null\n            lastTransitionTime: '2024-09-17T07:30:51Z'\n            status: 'True'\n            type: PodScheduled\n        containerStatuses:\n        -   containerID: docker://a0f8ceb06ee31d2ba428e7bca5b1fcff937ee34548293bbf5ab8279655c74b08\n            image: nginx1:1\n            imageID: docker://sha256:7b38039a0639b52521e710b2a4f2775932de489410f1c8cb3f00e3556717963b\n            lastState: {}\n            name: nginx1\n            ready: true\n            restartCount: 0\n            started: true\n            state:\n                running:\n                    startedAt: '2024-09-17T07:31:01Z'\n        hostIP: 192.168.49.2\n        hostIPs:\n        -   ip: 192.168.49.2\n        phase: Running\n        podIP: 10.244.0.128\n        podIPs:\n        -   ip: 10.244.0.128\n        qosClass: BestEffort\n        startTime: '2024-09-17T07:30:51Z'\n"
}

TASK [Get services info] *********************************************************************************************************************************************************************************************************
ok: [ac-mini-docker]

TASK [debug] *********************************************************************************************************************************************************************************************************************
ok: [ac-mini-docker] => {
    "msg": "-   apiVersion: v1\n    kind: Service\n    metadata:\n        creationTimestamp: '2024-09-08T14:17:58Z'\n        labels:\n            app: balanced\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:labels:\n                        .: {}\n                        f:app: {}\n                f:spec:\n                    f:allocateLoadBalancerNodePorts: {}\n                    f:externalTrafficPolicy: {}\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":8080,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-expose\n            operation: Update\n            time: '2024-09-08T14:17:58Z'\n        name: balanced\n        namespace: default\n        resourceVersion: '384549'\n        uid: 81d1ebb5-7108-4712-931f-ea236745f2d2\n    spec:\n        allocateLoadBalancerNodePorts: true\n        clusterIP: 10.102.20.175\n        clusterIPs:\n        - 10.102.20.175\n        externalTrafficPolicy: Cluster\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   nodePort: 32502\n            port: 8080\n            protocol: TCP\n            targetPort: 8080\n        selector:\n            app: balanced\n        sessionAffinity: None\n        type: LoadBalancer\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"bar-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":8080}],\"selector\":{\"app\":\"bar\"}}}\n\n                '\n        creationTimestamp: '2024-09-08T14:32:00Z'\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":8080,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T14:32:00Z'\n        name: bar-service\n        namespace: default\n        resourceVersion: '14921'\n        uid: a5fe0738-73f9-4b3f-8b0b-aace70426dd9\n    spec:\n        clusterIP: 10.105.171.144\n        clusterIPs:\n        - 10.105.171.144\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   port: 8080\n            protocol: TCP\n            targetPort: 8080\n        selector:\n            app: bar\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"foo-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":8080}],\"selector\":{\"app\":\"foo\"}}}\n\n                '\n        creationTimestamp: '2024-09-08T14:32:00Z'\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":8080,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T14:32:00Z'\n        name: foo-service\n        namespace: default\n        resourceVersion: '14910'\n        uid: 3e02c8b7-e7ef-48f8-8f41-41771970a0a2\n    spec:\n        clusterIP: 10.100.2.159\n        clusterIPs:\n        - 10.100.2.159\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   port: 8080\n            protocol: TCP\n            targetPort: 8080\n        selector:\n            app: foo\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        creationTimestamp: '2024-09-08T09:38:19Z'\n        labels:\n            component: apiserver\n            provider: kubernetes\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:labels:\n                        .: {}\n                        f:component: {}\n                        f:provider: {}\n                f:spec:\n                    f:clusterIP: {}\n                    f:internalTrafficPolicy: {}\n                    f:ipFamilyPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":443,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kube-apiserver\n            operation: Update\n            time: '2024-09-08T09:38:19Z'\n        name: kubernetes\n        namespace: default\n        resourceVersion: '198'\n        uid: 8529ec5e-620d-4cc6-b269-b542d7db8228\n    spec:\n        clusterIP: 10.96.0.1\n        clusterIPs:\n        - 10.96.0.1\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   name: https\n            port: 443\n            protocol: TCP\n            targetPort: 8443\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"nginx\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":80,\"targetPort\":80}],\"selector\":{\"app\":\"nginx\"},\"type\":\"NodePort\"}}\n\n                '\n        creationTimestamp: '2024-09-16T04:57:23Z'\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                f:spec:\n                    f:externalTrafficPolicy: {}\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":80,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-16T04:57:23Z'\n        name: nginx\n        namespace: default\n        resourceVersion: '373834'\n        uid: f8411fb2-3335-4ff0-a4d0-3fa90254f9aa\n    spec:\n        clusterIP: 10.101.4.116\n        clusterIPs:\n        - 10.101.4.116\n        externalTrafficPolicy: Cluster\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   nodePort: 31646\n            port: 80\n            protocol: TCP\n            targetPort: 80\n        selector:\n            app: nginx\n        sessionAffinity: None\n        type: NodePort\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ipFamilies\":[\"IPv4\"],\"ipFamilyPolicy\":\"SingleStack\",\"ports\":[{\"appProtocol\":\"http\",\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":\"http\"},{\"appProtocol\":\"https\",\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"NodePort\"}}\n\n                '\n        creationTimestamp: '2024-09-08T14:25:16Z'\n        labels:\n            app.kubernetes.io/component: controller\n            app.kubernetes.io/instance: ingress-nginx\n            app.kubernetes.io/name: ingress-nginx\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                    f:labels:\n                        .: {}\n                        f:app.kubernetes.io/component: {}\n                        f:app.kubernetes.io/instance: {}\n                        f:app.kubernetes.io/name: {}\n                f:spec:\n                    f:externalTrafficPolicy: {}\n                    f:internalTrafficPolicy: {}\n                    f:ipFamilies: {}\n                    f:ipFamilyPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":443,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:appProtocol: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                        k:{\"port\":80,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:appProtocol: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T14:25:16Z'\n        name: ingress-nginx-controller\n        namespace: ingress-nginx\n        resourceVersion: '14447'\n        uid: 7b6e6b8b-e254-4310-9639-50955e024e2b\n    spec:\n        clusterIP: 10.101.53.194\n        clusterIPs:\n        - 10.101.53.194\n        externalTrafficPolicy: Cluster\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   appProtocol: http\n            name: http\n            nodePort: 30290\n            port: 80\n            protocol: TCP\n            targetPort: http\n        -   appProtocol: https\n            name: https\n            nodePort: 31743\n            port: 443\n            protocol: TCP\n            targetPort: https\n        selector:\n            app.kubernetes.io/component: controller\n            app.kubernetes.io/instance: ingress-nginx\n            app.kubernetes.io/name: ingress-nginx\n        sessionAffinity: None\n        type: NodePort\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"appProtocol\":\"https\",\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"ClusterIP\"}}\n\n                '\n        creationTimestamp: '2024-09-08T14:25:16Z'\n        labels:\n            app.kubernetes.io/component: controller\n            app.kubernetes.io/instance: ingress-nginx\n            app.kubernetes.io/name: ingress-nginx\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                    f:labels:\n                        .: {}\n                        f:app.kubernetes.io/component: {}\n                        f:app.kubernetes.io/instance: {}\n                        f:app.kubernetes.io/name: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":443,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:appProtocol: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T14:25:16Z'\n        name: ingress-nginx-controller-admission\n        namespace: ingress-nginx\n        resourceVersion: '14451'\n        uid: be2100f1-4834-4d44-b416-948efe3b9a0e\n    spec:\n        clusterIP: 10.105.151.88\n        clusterIPs:\n        - 10.105.151.88\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   appProtocol: https\n            name: https-webhook\n            port: 443\n            protocol: TCP\n            targetPort: webhook\n        selector:\n            app.kubernetes.io/component: controller\n            app.kubernetes.io/instance: ingress-nginx\n            app.kubernetes.io/name: ingress-nginx\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            prometheus.io/port: '9153'\n            prometheus.io/scrape: 'true'\n        creationTimestamp: '2024-09-08T09:38:20Z'\n        labels:\n            k8s-app: kube-dns\n            kubernetes.io/cluster-service: 'true'\n            kubernetes.io/name: CoreDNS\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:prometheus.io/port: {}\n                        f:prometheus.io/scrape: {}\n                    f:labels:\n                        .: {}\n                        f:k8s-app: {}\n                        f:kubernetes.io/cluster-service: {}\n                        f:kubernetes.io/name: {}\n                f:spec:\n                    f:clusterIP: {}\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":53,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                        k:{\"port\":53,\"protocol\":\"UDP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                        k:{\"port\":9153,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubeadm\n            operation: Update\n            time: '2024-09-08T09:38:20Z'\n        name: kube-dns\n        namespace: kube-system\n        resourceVersion: '234'\n        uid: 51572dae-9293-4260-85b3-be8efaa2e276\n    spec:\n        clusterIP: 10.96.0.10\n        clusterIPs:\n        - 10.96.0.10\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   name: dns\n            port: 53\n            protocol: UDP\n            targetPort: 53\n        -   name: dns-tcp\n            port: 53\n            protocol: TCP\n            targetPort: 53\n        -   name: metrics\n            port: 9153\n            protocol: TCP\n            targetPort: 9153\n        selector:\n            k8s-app: kube-dns\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/minikube-addons\":\"metrics-server\",\"kubernetes.io/minikube-addons-endpoint\":\"metrics-server\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n\n                '\n        creationTimestamp: '2024-09-08T10:58:32Z'\n        labels:\n            addonmanager.kubernetes.io/mode: Reconcile\n            k8s-app: metrics-server\n            kubernetes.io/minikube-addons: metrics-server\n            kubernetes.io/minikube-addons-endpoint: metrics-server\n            kubernetes.io/name: Metrics-server\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                    f:labels:\n                        .: {}\n                        f:addonmanager.kubernetes.io/mode: {}\n                        f:k8s-app: {}\n                        f:kubernetes.io/minikube-addons: {}\n                        f:kubernetes.io/minikube-addons-endpoint: {}\n                        f:kubernetes.io/name: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":443,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T10:58:32Z'\n        name: metrics-server\n        namespace: kube-system\n        resourceVersion: '4316'\n        uid: 333c7e17-066e-443f-acb4-4264890a33f0\n    spec:\n        clusterIP: 10.107.109.57\n        clusterIPs:\n        - 10.107.109.57\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   name: https\n            port: 443\n            protocol: TCP\n            targetPort: https\n        selector:\n            k8s-app: metrics-server\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/minikube-addons\":\"registry\"},\"name\":\"registry\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"targetPort\":5000},{\"name\":\"https\",\"port\":443,\"targetPort\":443}],\"selector\":{\"actual-registry\":\"true\",\"kubernetes.io/minikube-addons\":\"registry\"},\"type\":\"ClusterIP\"}}\n\n                '\n        creationTimestamp: '2024-09-13T13:17:02Z'\n        labels:\n            addonmanager.kubernetes.io/mode: Reconcile\n            kubernetes.io/minikube-addons: registry\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                    f:labels:\n                        .: {}\n                        f:addonmanager.kubernetes.io/mode: {}\n                        f:kubernetes.io/minikube-addons: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":443,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                        k:{\"port\":80,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:name: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-13T13:17:02Z'\n        name: registry\n        namespace: kube-system\n        resourceVersion: '173265'\n        uid: 8c410b44-c0c8-4425-8357-61e7c1a842f2\n    spec:\n        clusterIP: 10.102.122.110\n        clusterIPs:\n        - 10.102.122.110\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   name: http\n            port: 80\n            protocol: TCP\n            targetPort: 5000\n        -   name: https\n            port: 443\n            protocol: TCP\n            targetPort: 443\n        selector:\n            actual-registry: 'true'\n            kubernetes.io/minikube-addons: registry\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"dashboard-metrics-scraper\",\"kubernetes.io/minikube-addons\":\"dashboard\"},\"name\":\"dashboard-metrics-scraper\",\"namespace\":\"kubernetes-dashboard\"},\"spec\":{\"ports\":[{\"port\":8000,\"targetPort\":8000}],\"selector\":{\"k8s-app\":\"dashboard-metrics-scraper\"}}}\n\n                '\n        creationTimestamp: '2024-09-08T10:52:54Z'\n        labels:\n            addonmanager.kubernetes.io/mode: Reconcile\n            k8s-app: dashboard-metrics-scraper\n            kubernetes.io/minikube-addons: dashboard\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                    f:labels:\n                        .: {}\n                        f:addonmanager.kubernetes.io/mode: {}\n                        f:k8s-app: {}\n                        f:kubernetes.io/minikube-addons: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":8000,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T10:52:54Z'\n        name: dashboard-metrics-scraper\n        namespace: kubernetes-dashboard\n        resourceVersion: '3995'\n        uid: bf94a6b3-55a1-4340-990b-e6c8d79dafa4\n    spec:\n        clusterIP: 10.96.69.76\n        clusterIPs:\n        - 10.96.69.76\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   port: 8000\n            protocol: TCP\n            targetPort: 8000\n        selector:\n            k8s-app: dashboard-metrics-scraper\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n-   apiVersion: v1\n    kind: Service\n    metadata:\n        annotations:\n            kubectl.kubernetes.io/last-applied-configuration: '{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kubernetes-dashboard\",\"kubernetes.io/minikube-addons\":\"dashboard\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kubernetes-dashboard\"},\"spec\":{\"ports\":[{\"port\":80,\"targetPort\":9090}],\"selector\":{\"k8s-app\":\"kubernetes-dashboard\"}}}\n\n                '\n        creationTimestamp: '2024-09-08T10:52:54Z'\n        labels:\n            addonmanager.kubernetes.io/mode: Reconcile\n            k8s-app: kubernetes-dashboard\n            kubernetes.io/minikube-addons: dashboard\n        managedFields:\n        -   apiVersion: v1\n            fieldsType: FieldsV1\n            fieldsV1:\n                f:metadata:\n                    f:annotations:\n                        .: {}\n                        f:kubectl.kubernetes.io/last-applied-configuration: {}\n                    f:labels:\n                        .: {}\n                        f:addonmanager.kubernetes.io/mode: {}\n                        f:k8s-app: {}\n                        f:kubernetes.io/minikube-addons: {}\n                f:spec:\n                    f:internalTrafficPolicy: {}\n                    f:ports:\n                        .: {}\n                        k:{\"port\":80,\"protocol\":\"TCP\"}:\n                            .: {}\n                            f:port: {}\n                            f:protocol: {}\n                            f:targetPort: {}\n                    f:selector: {}\n                    f:sessionAffinity: {}\n                    f:type: {}\n            manager: kubectl-client-side-apply\n            operation: Update\n            time: '2024-09-08T10:52:54Z'\n        name: kubernetes-dashboard\n        namespace: kubernetes-dashboard\n        resourceVersion: '3991'\n        uid: 2bc15cd3-bd9d-47e6-b5cd-cb3f0ae88493\n    spec:\n        clusterIP: 10.97.220.246\n        clusterIPs:\n        - 10.97.220.246\n        internalTrafficPolicy: Cluster\n        ipFamilies:\n        - IPv4\n        ipFamilyPolicy: SingleStack\n        ports:\n        -   port: 80\n            protocol: TCP\n            targetPort: 9090\n        selector:\n            k8s-app: kubernetes-dashboard\n        sessionAffinity: None\n        type: ClusterIP\n    status:\n        loadBalancer: {}\n"
}

TASK [Expose Nginx deployment as NodePort service] *******************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Get Nginx service info] ****************************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [debug] *********************************************************************************************************************************************************************************************************************
ok: [ac-mini-docker] => {
    "our_service_info.stdout_lines": [
        "NAME     TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE",
        "nginx1   NodePort   10.99.72.184   <none>        80:30650/TCP   1s"
    ]
}

TASK [Wait for 5 seconds] ********************************************************************************************************************************************************************************************************
Pausing for 5 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ac-mini-docker]

TASK [Test Nginx service] ********************************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [debug] *********************************************************************************************************************************************************************************************************************
ok: [ac-mini-docker] => {
    "test_result.stdout_lines": [
        "<!DOCTYPE html>",
        "<html>",
        "<body>",
        "<h1>Hello</h1>",
        "<p>My IP address is: <script>document.write(\"<b>\" + window.location.hostname + \"</b>\");</script></p>",
        "<p>My name is: nginx1</p>",
        "</body>",
        "</html>"
    ]
}

TASK [Start port forwarding with kubectl] ****************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Wait for port forwarding to start] *****************************************************************************************************************************************************************************************
Pausing for 2 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ac-mini-docker]

TASK [Find the port-forward process ID] ******************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Test Nginx service from Internet] ******************************************************************************************************************************************************************************************
ok: [ac-mini-docker -> localhost]

TASK [debug] *********************************************************************************************************************************************************************************************************************
ok: [ac-mini-docker] => {
    "uri_result_external.content": "<!DOCTYPE html>\n<html>\n<body>\n<h1>Hello</h1>\n<p>My IP address is: <script>document.write(\"<b>\" + window.location.hostname + \"</b>\");</script></p>\n<p>My name is: nginx1</p>\n</body>\n</html>\n"
}

TASK [Kill the port-forward process] *********************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Delete Nginx existing service and deployment] ******************************************************************************************************************************************************************************
changed: [ac-mini-docker]

TASK [Wait for 5 seconds] ********************************************************************************************************************************************************************************************************
Pausing for 5 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ac-mini-docker]

TASK [Remove existing Nginx image] ***********************************************************************************************************************************************************************************************
changed: [ac-mini-docker]

PLAY RECAP ***********************************************************************************************************************************************************************************************************************
ac-mini-docker             : ok=32   changed=12   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

