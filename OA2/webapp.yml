---
- name: deploy httpd and app  on containers
  hosts: webapps
  vars:
    webroot: "/tmp/webroot/"
    approot: "/tmp/approot/"
  tasks:

    - name: pull image
      community.docker.docker_image:
        name: python
        source: pull
        tag: latest

    - name: webroot present
      ansible.builtin.file:
        path: "{{ webroot }}"
        state: directory

    - name: approot present
      ansible.builtin.file:
        path: "{{ approot }}"
        state: directory

    - name: deploy myapp.py
      ansible.builtin.copy:
        src: ./myapp.py
        dest: "{{ approot}}myapp.py"

    - name: stop and remove previous myapp container
      community.docker.docker_container:
        name: myapp
        image: python
        state: stopped
        auto_remove: yes

    - name: run myapp container
      community.docker.docker_container:
        name: myapp
        image: python
        state: started
        command: python /tmp/app/myapp.py
        detach: yes
        auto_remove: yes
        volumes:
          - "{{ approot }}:/tmp/app/"
          - "{{ webroot }}:/tmp/web/"
#      register: runapp_result

#    - name: Print myapp result
#      debug:
#        var: runapp_result

    - name: custom index.html
      ansible.builtin.copy:
        dest: "{{ webroot}}index.html"
        content: |
          Start Web Page from {{inventory_hostname}}
          <a href="forecast.html">Forecast here!</a>

    - name: pull image
      community.docker.docker_image:
        name: httpd
        source: pull
        tag: latest

    - name: stop and remove previous webserver container
      community.docker.docker_container:
        name: webserver
        image: httpd
        state: stopped
        auto_remove: yes

    - name: run httpd container
      community.docker.docker_container:
        name: webserver
        image: httpd
        state: started
        detach: true
        auto_remove: yes
        exposed_ports:
          - '80'
        ports:
          - '8080:80'
        volumes: "{{ webroot }}:/usr/local/apache2/htdocs/"

    - name: Verify httpd response
      uri:
        url: http://{{ansible_host}}:8080
        return_content: yes
      register: result

    - name: Print httpd response
      debug:
        var: result
