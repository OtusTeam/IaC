---
- name: Install and Configure Docker Compose, Prometheus, Grafana, and Nginx
  hosts: docker

  vars:
    work_dir: "./tank_nginx_prometheus_grafana"

  tasks:
  - name: Create directory for Docker Compose
    file:
      path: "{{ work_dir }}"
      state: directory
      mode: '0755'

  - name: Create Docker Compose configuration file
    copy:
      content: |
        services:
          cadvisor:
            image: gcr.io/cadvisor/cadvisor:latest
            container_name: cadvisor
            ports:
            - "127.0.0.1:8080:8080"
            volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
          prometheus:
            image: prom/prometheus
            ports:
              - "9090:9090"
            volumes:
              - ./prometheus.yml:/etc/prometheus/prometheus.yml
            restart: always
          grafana:
            image: grafana/grafana
            ports:
              - "3000:3000"
            depends_on:
              - prometheus
            restart: always
          nginx:
            image: nginx:latest
            ports:
              - "80:80"
              - "8888:8888"
            volumes:
              - ./nginx.conf:/etc/nginx/nginx.conf
              - ./index.html:/var/www/html/index.html:ro
            restart: always
            environment:
              - PROMETHEUS_URL=http://prometheus:9090
            depends_on:
              - prometheus
            labels:
              prometheus.io/scrape: "true"
              prometheus.io/port: "8888"
              prometheus.io/path: "/metrics"
        networks:
          default:
            driver: bridge  # Используем драйвер bridge (по умолчанию)
      dest: "{{ work_dir }}/docker-compose.yml"
      mode: '0644'
    notify: restart docker compose

  - name: Copy all files from local templates to remote work_dir
    copy:
      src: templates/  # Локальный каталог с файлами
      dest: "{{ work_dir }}/"  # Удаленный каталог, куда будут скопированы файлы
      remote_src: no  # Указывает, что src - это локальный путь
      mode: '0644'  # Устанавливает права доступа к файлам (по желанию)

  - name: Start Docker Compose
    command: docker compose up -d
    args:
      chdir: "{{ work_dir }}"
    when: not ansible_run_tags|intersect(['down'])

  - name: Stop Docker Compose
    command: docker compose down
    args:
      chdir: "{{ work_dir }}"
    tags:
      - down
    when: ansible_run_tags|intersect(['down'])

  handlers:
  - name: restart docker compose
    command: docker compose restart
    args:
      chdir: "{{ work_dir }}"
