---
- name: Install and Configure Docker Compose, Prometheus, Grafana, and Nginx
  hosts: docker

  vars:
    work_dir: "./tank_nginx_prometheus_grafana"

  tasks:
  - name: Create directory for Docker Compose
    file:
      path: "{{ work_dir }}"
      state: directory
      mode: '0755'

  - name: Create Docker Compose configuration file
    copy:
      content: |
        services:
          prometheus:
            image: prom/prometheus
            ports:
              - "9090:9090"
            volumes:
              - ./prometheus.yml:/etc/prometheus/prometheus.yml
            restart: always

          grafana:
            image: grafana/grafana
            ports:
              - "3000:3000"
            depends_on:
              - prometheus
            restart: always
          nginx:
            image: nginx:latest
            ports:
              - "80:80"
            volumes:
              - ./index.html:/usr/share/nginx/html/index.html:ro
            restart: always
            environment:
              - PROMETHEUS_URL=http://prometheus:9090
            depends_on:
              - prometheus
            labels:
              prometheus.io/scrape: "true"
              prometheus.io/port: "80"
              prometheus.io/path: "/metrics"
      dest: "{{ work_dir }}/docker-compose.yml"
      mode: '0644'
    notify: restart docker compose

  - name: Create Prometheus configuration file
    copy:
      content: |
        global:
          scrape_interval: 10s

        scrape_configs:
        - job_name: 'prometheus'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:9090']

        - job_name: 'nginx'
          scrape_interval: 10s
          static_configs:
            - targets: ['nginx:80']
      dest: "{{ work_dir }}/prometheus.yml"
      mode: '0644'
    notify: restart docker compose

  - name: Create Nginx configuration file
    copy:
      content: |
        http {
          server {
            listen 80;
            location / {
              return 200 'Hello World!';
            }
            location /metrics {
              stub_status on;
            }
          }
        }
      dest: "{{ work_dir }}/nginx.conf"
      mode: '0644'
    notify: restart docker compose

  - name: Create Nginx index.html file
    copy:
      content: |
        <html>
          <body>
            <h1>Hello World!</h1>
          </body>
        </html>
      dest: "{{ work_dir }}/index.html"
      mode: '0644'
    notify: restart docker compose

  - name: Create Tank load file
    copy:
      src: templates/load.yaml
      dest: "{{ work_dir }}/load.yaml"
      mode: '0644'
    notify: restart docker compose

  - name: Create Tank run file
    copy:
      src: templates/tank.sh
      dest: "{{ work_dir }}/tank.sh"
      mode: +x
    notify: restart docker compose

  - name: Start Docker Compose
    command: docker compose up -d
    args:
      chdir: "{{ work_dir }}"
    when: not ansible_run_tags|intersect(['down'])

  - name: Stop Docker Compose
    command: docker compose down
    args:
      chdir: "{{ work_dir }}"
    tags:
      - down
    when: ansible_run_tags|intersect(['down'])

  handlers:
  - name: restart docker compose
    command: docker compose restart
    args:
      chdir: "{{ work_dir }}"
