yc-user@test:~/examples/multi_stage$ ./run.sh 
++ cat Dockerfile
# syntax=docker/dockerfile:1
FROM golang:1.21
WORKDIR /src
COPY <<EOF ./main.go
package main

import "fmt"

func main() {
  fmt.Println("hello, world")
}
EOF
RUN go build -o /bin/hello ./main.go

FROM scratch
COPY --from=0 /bin/hello /bin/hello
CMD ["/bin/hello"]
++ read -n 1 -s -r -p 'press any key to continue...'
press any key to continue...++ echo ''

++ docker build -t multi_stage_hello .
[+] Building 2.2s (12/12) FINISHED                                                     docker:default
 => [internal] load build definition from Dockerfile                                             0.0s
 => => transferring dockerfile: 303B                                                             0.0s
 => resolve image config for docker-image://docker.io/docker/dockerfile:1                        0.8s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:fe40cf4e92cd0c467be2cfc30657a680  0.0s
 => [internal] load metadata for docker.io/library/golang:1.21                                   0.9s
 => [internal] load .dockerignore                                                                0.0s
 => => transferring context: 2B                                                                  0.0s
 => [stage-0 1/4] FROM docker.io/library/golang:1.21@sha256:4746d26432a9117a5f58e95cb9f954ddf0d  0.0s
 => [internal] preparing inline document                                                         0.0s
 => CACHED [stage-0 2/4] WORKDIR /src                                                            0.0s
 => CACHED [stage-0 3/4] COPY <<EOF ./main.go                                                    0.0s
 => CACHED [stage-0 4/4] RUN go build -o /bin/hello ./main.go                                    0.0s
 => CACHED [stage-1 1/1] COPY --from=0 /bin/hello /bin/hello                                     0.0s
 => exporting to image                                                                           0.0s
 => => exporting layers                                                                          0.0s
 => => writing image sha256:036f634da1037b70fd96ef663f43c91adff46541fa2ef1adc5cfd92116839516     0.0s
 => => naming to docker.io/library/multi_stage_hello                                             0.0s
++ docker run --rm multi_stage_hello
hello, world
