yc-user@test:~/examples/python$ ./run.sh
++ cat Dockerfile
# Use the stable Alpine image as the base image
FROM alpine:3.20

# Update the package index and install Python 3 and pip
RUN apk add --update-cache
RUN apk add python3
RUN apk add python3-dev
RUN apk add py-pip
RUN apk add build-base
#RUN pip install virtualenv 
# Clear cache
RUN rm -rf /var/cache/apk/*

# Copy the requirements.txt file to the /app directory
#COPY requirements.txt /app/

# Set the default working directory to /app
#WORKDIR /app

# Install the dependencies
#RUN pip3 install -r requirements.txt

# Copy the application code to the /app directory
# COPY hello.py /app/

# Set the default command to run when the container is started
CMD ["python3", "--version"]
#CMD ["python3", "hello.py"]
++ read -n 1 -s -r -p 'press any key to continue...'
press any key to continue...++ echo ''

++ docker build -t mypython .
[+] Building 2.7s (11/11) FINISHED                               docker:default
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 750B                                       0.0s
 => [internal] load metadata for docker.io/library/alpine:3.20             0.0s
 => [internal] load .dockerignore                                          0.0s
 => => transferring context: 2B                                            0.0s
 => [1/7] FROM docker.io/library/alpine:3.20                               0.0s
 => CACHED [2/7] RUN apk add --update-cache                                0.0s
 => CACHED [3/7] RUN apk add python3                                       0.0s
 => CACHED [4/7] RUN apk add python3-dev                                   0.0s
 => CACHED [5/7] RUN apk add py-pip                                        0.0s
 => CACHED [6/7] RUN apk add build-base                                    0.0s
 => [7/7] RUN rm -rf /var/cache/apk/*                                      0.4s
 => exporting to image                                                     2.1s
 => => exporting layers                                                    2.0s
 => => writing image sha256:7fdfe504ca3af07ade64a8e9d03b171806247108cb2f9  0.0s
 => => naming to docker.io/library/mypython                                0.0s
++ docker run mypython
Python 3.12.3
++ read -n 1 -s -r -p 'press any key to continue...'
press any key to continue...++ echo ''

++ docker run python:3.12 python --version
Python 3.12.5
++ read -n 1 -s -r -p 'press any key to continue...'
press any key to continue...++ echo ''

++ docker images
REPOSITORY   TAG           IMAGE ID       CREATED          SIZE
mypython     latest        7fdfe504ca3a   25 seconds ago   388MB
<none>       <none>        ecf3b8ca1c7d   12 hours ago     72.5MB
myimage      latest        a386b69238e8   13 hours ago     7.8MB
python       3.12-alpine   ab735b9c6e07   2 weeks ago      53.6MB
python       3.12          0218518c77be   2 weeks ago      1.02GB
printenv     latest        36a6c8a181e5   4 weeks ago      7.8MB
alpine       3.20          324bc02ae123   4 weeks ago      7.8MB
alpine       latest        324bc02ae123   4 weeks ago      7.8MB
<none>       <none>        3c75feea54aa   4 weeks ago      7.8MB
<none>       <none>        9b37dee0a0a7   4 weeks ago      7.8MB
busybox      latest        65ad0d468eb1   15 months ago    4.26MB

