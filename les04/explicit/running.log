aleksey@first:~/OtusTeam/IaC/les04/explicit$ tf apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following
symbols:
  + create

Terraform will perform the following actions:

  # null_resource.ansible will be created
  + resource "null_resource" "ansible" {
      + id = (known after apply)
    }

  # yandex_compute_instance.les04_explicit will be created
  + resource "yandex_compute_instance" "les04_explicit" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = (sensitive value)
        }
      + name                      = "les04-explicit"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd80viupr3qjr5g6g9du"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = "e9bop98iu12teftg4uj8"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy {
          + preemptible = true
        }
    }

  # yandex_vpc_network.les01-network will be created
  + resource "yandex_vpc_network" "les01-network" {
      + created_at                = (known after apply)
      + default_security_group_id = (known after apply)
      + folder_id                 = (known after apply)
      + id                        = (known after apply)
      + labels                    = (known after apply)
      + name                      = "wp-network"
      + subnet_ids                = (known after apply)
    }

  # yandex_vpc_subnet.les01-subnet-a will be created
  + resource "yandex_vpc_subnet" "les01-subnet-a" {
      + created_at     = (known after apply)
      + folder_id      = (known after apply)
      + id             = (known after apply)
      + labels         = (known after apply)
      + name           = "wp-subnet-a"
      + network_id     = (known after apply)
      + v4_cidr_blocks = [
          + "10.2.0.0/16",
        ]
      + v6_cidr_blocks = (known after apply)
      + zone           = "ru-central1-a"
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

yandex_compute_instance.les04_explicit: Creating...
yandex_vpc_network.les01-network: Creating...
yandex_vpc_network.les01-network: Creation complete after 2s [id=enps4ir4bans909kgk6r]
yandex_vpc_subnet.les01-subnet-a: Creating...
yandex_vpc_subnet.les01-subnet-a: Creation complete after 0s [id=e9bi1iaqppolq74plhdk]
yandex_compute_instance.les04_explicit: Still creating... [10s elapsed]
yandex_compute_instance.les04_explicit: Still creating... [20s elapsed]
yandex_compute_instance.les04_explicit: Still creating... [30s elapsed]
yandex_compute_instance.les04_explicit: Still creating... [40s elapsed]
yandex_compute_instance.les04_explicit: Provisioning with 'local-exec'...
yandex_compute_instance.les04_explicit (local-exec): Executing: ["/bin/sh" "-c" "echo 'les04-explicit ansible_host=51.250.3.63' > hosts"]
yandex_compute_instance.les04_explicit: Provisioning with 'remote-exec'...
yandex_compute_instance.les04_explicit (remote-exec): Connecting to remote host via SSH...
yandex_compute_instance.les04_explicit (remote-exec):   Host: 51.250.3.63
yandex_compute_instance.les04_explicit (remote-exec):   User: ubuntu
yandex_compute_instance.les04_explicit (remote-exec):   Password: false
yandex_compute_instance.les04_explicit (remote-exec):   Private key: true
yandex_compute_instance.les04_explicit (remote-exec):   Certificate: false
yandex_compute_instance.les04_explicit (remote-exec):   SSH Agent: false
yandex_compute_instance.les04_explicit (remote-exec):   Checking Host Key: false
yandex_compute_instance.les04_explicit (remote-exec):   Target Platform: unix
yandex_compute_instance.les04_explicit: Still creating... [50s elapsed]
yandex_compute_instance.les04_explicit (remote-exec): Connecting to remote host via SSH...
yandex_compute_instance.les04_explicit (remote-exec):   Host: 51.250.3.63
yandex_compute_instance.les04_explicit (remote-exec):   User: ubuntu
yandex_compute_instance.les04_explicit (remote-exec):   Password: false
yandex_compute_instance.les04_explicit (remote-exec):   Private key: true
yandex_compute_instance.les04_explicit (remote-exec):   Certificate: false
yandex_compute_instance.les04_explicit (remote-exec):   SSH Agent: false
yandex_compute_instance.les04_explicit (remote-exec):   Checking Host Key: false
yandex_compute_instance.les04_explicit (remote-exec):   Target Platform: unix
yandex_compute_instance.les04_explicit (remote-exec): Connected!
yandex_compute_instance.les04_explicit: Creation complete after 1m0s [id=fhm6u13qaj1mrpebmb1m]
null_resource.ansible: Creating...
null_resource.ansible: Provisioning with 'local-exec'...
null_resource.ansible (local-exec): Executing: ["/bin/sh" "-c" "export ANSIBLE_HOST_KEY_CHECKING=False &&\nansible -u ubuntu -i hosts --private-key ~/.ssh/id_rsa -m ping all\n"]
null_resource.ansible (local-exec): les04-explicit | SUCCESS => {
null_resource.ansible (local-exec):     "ansible_facts": {
null_resource.ansible (local-exec):         "discovered_interpreter_python": "/usr/bin/python3"
null_resource.ansible (local-exec):     },
null_resource.ansible (local-exec):     "changed": false,
null_resource.ansible (local-exec):     "ping": "pong"
null_resource.ansible (local-exec): }
null_resource.ansible: Creation complete after 2s [id=6386182803941433070]

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.
aleksey@first:~/OtusTeam/IaC/les04/explicit$ cat hosts 
les04-explicit ansible_host=51.250.3.63
aleksey@first:~/OtusTeam/IaC/les04/explicit$ rm hosts 
aleksey@first:~/OtusTeam/IaC/les04/explicit$ tf destroy
yandex_vpc_network.les01-network: Refreshing state... [id=enps4ir4bans909kgk6r]
yandex_compute_instance.les04_explicit: Refreshing state... [id=fhm6u13qaj1mrpebmb1m]
yandex_vpc_subnet.les01-subnet-a: Refreshing state... [id=e9bi1iaqppolq74plhdk]
null_resource.ansible: Refreshing state... [id=6386182803941433070]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following
symbols:
  - destroy

Terraform will perform the following actions:

  # null_resource.ansible will be destroyed
  - resource "null_resource" "ansible" {
      - id = "6386182803941433070" -> null
    }

  # yandex_compute_instance.les04_explicit will be destroyed
  - resource "yandex_compute_instance" "les04_explicit" {
      - created_at                = "2024-07-09T18:15:56Z" -> null
      - folder_id                 = "b1gmesrdjgklgkvcp704" -> null
      - fqdn                      = "fhm6u13qaj1mrpebmb1m.auto.internal" -> null
      - id                        = "fhm6u13qaj1mrpebmb1m" -> null
      - labels                    = {} -> null
      - metadata                  = {
          - "ssh-keys" = (sensitive value)
        } -> null
      - name                      = "les04-explicit" -> null
      - network_acceleration_type = "standard" -> null
      - platform_id               = "standard-v1" -> null
      - status                    = "running" -> null
      - zone                      = "ru-central1-a" -> null

      - boot_disk {
          - auto_delete = true -> null
          - device_name = "fhmgds3e8h5kfh1n1r04" -> null
          - disk_id     = "fhmgds3e8h5kfh1n1r04" -> null
          - mode        = "READ_WRITE" -> null

          - initialize_params {
              - block_size = 4096 -> null
              - image_id   = "fd80viupr3qjr5g6g9du" -> null
              - size       = 3 -> null
              - type       = "network-hdd" -> null
            }
        }

      - metadata_options {
          - aws_v1_http_endpoint = 1 -> null
          - aws_v1_http_token    = 2 -> null
          - gce_http_endpoint    = 1 -> null
          - gce_http_token       = 1 -> null
        }

      - network_interface {
          - index              = 0 -> null
          - ip_address         = "10.128.0.26" -> null
          - ipv4               = true -> null
          - ipv6               = false -> null
          - mac_address        = "d0:0d:6f:04:7a:54" -> null
          - nat                = true -> null
          - nat_ip_address     = "51.250.3.63" -> null
          - nat_ip_version     = "IPV4" -> null
          - security_group_ids = [] -> null
          - subnet_id          = "e9bop98iu12teftg4uj8" -> null
        }

      - placement_policy {
          - host_affinity_rules       = [] -> null
          - placement_group_partition = 0 -> null
        }

      - resources {
          - core_fraction = 100 -> null
          - cores         = 2 -> null
          - gpus          = 0 -> null
          - memory        = 2 -> null
        }

      - scheduling_policy {
          - preemptible = true -> null
        }
    }

  # yandex_vpc_network.les01-network will be destroyed
  - resource "yandex_vpc_network" "les01-network" {
      - created_at                = "2024-07-09T18:15:56Z" -> null
      - default_security_group_id = "enpish1lcb3f4gb83bhu" -> null
      - folder_id                 = "b1gmesrdjgklgkvcp704" -> null
      - id                        = "enps4ir4bans909kgk6r" -> null
      - labels                    = {} -> null
      - name                      = "wp-network" -> null
      - subnet_ids                = [
          - "e9bi1iaqppolq74plhdk",
        ] -> null
    }

  # yandex_vpc_subnet.les01-subnet-a will be destroyed
  - resource "yandex_vpc_subnet" "les01-subnet-a" {
      - created_at     = "2024-07-09T18:15:57Z" -> null
      - folder_id      = "b1gmesrdjgklgkvcp704" -> null
      - id             = "e9bi1iaqppolq74plhdk" -> null
      - labels         = {} -> null
      - name           = "wp-subnet-a" -> null
      - network_id     = "enps4ir4bans909kgk6r" -> null
      - v4_cidr_blocks = [
          - "10.2.0.0/16",
        ] -> null
      - v6_cidr_blocks = [] -> null
      - zone           = "ru-central1-a" -> null
    }

Plan: 0 to add, 0 to change, 4 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

null_resource.ansible: Destroying... [id=6386182803941433070]
null_resource.ansible: Destruction complete after 0s
yandex_vpc_subnet.les01-subnet-a: Destroying... [id=e9bi1iaqppolq74plhdk]
yandex_compute_instance.les04_explicit: Destroying... [id=fhm6u13qaj1mrpebmb1m]
yandex_compute_instance.les04_explicit: Provisioning with 'local-exec'...
yandex_compute_instance.les04_explicit (local-exec): Executing: ["/bin/sh" "-c" "rm hosts"]
yandex_compute_instance.les04_explicit (local-exec): rm: cannot remove 'hosts': No such file or directory
yandex_vpc_subnet.les01-subnet-a: Destruction complete after 1s
yandex_vpc_network.les01-network: Destroying... [id=enps4ir4bans909kgk6r]
yandex_vpc_network.les01-network: Destruction complete after 1s
yandex_compute_instance.les04_explicit: Still destroying... [id=fhm6u13qaj1mrpebmb1m, 10s elapsed]
yandex_compute_instance.les04_explicit: Still destroying... [id=fhm6u13qaj1mrpebmb1m, 20s elapsed]
yandex_compute_instance.les04_explicit: Still destroying... [id=fhm6u13qaj1mrpebmb1m, 30s elapsed]
yandex_compute_instance.les04_explicit: Still destroying... [id=fhm6u13qaj1mrpebmb1m, 40s elapsed]
yandex_compute_instance.les04_explicit: Destruction complete after 47s

Destroy complete! Resources: 4 destroyed.
