za@za-Lenovo-IdeaPad-S340-15IWL:~/Documents/IaC/2git/les01/single$ ./run.sh
++ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.lemp will be created
  + resource "yandex_compute_instance" "lemp" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAA...
            EOT
        }
      + name                      = "les01-auto-lemp"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = (known after apply)

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd89eh9ba36b7cggtan6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + metadata_options (known after apply)

      + network_interface {
          + index          = (known after apply)
          + ip_address     = (known after apply)
          + ipv4           = true
          + ipv6           = (known after apply)
          + ipv6_address   = (known after apply)
          + mac_address    = (known after apply)
          + nat            = true
          + nat_ip_address = (known after apply)
          + nat_ip_version = (known after apply)
          + subnet_id      = "e9bop98iu12teftg4uj8"
        }

      + placement_policy (known after apply)

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

yandex_compute_instance.lemp: Creating...
yandex_compute_instance.lemp: Still creating... [00m10s elapsed]
yandex_compute_instance.lemp: Still creating... [00m20s elapsed]
yandex_compute_instance.lemp: Still creating... [00m30s elapsed]
yandex_compute_instance.lemp: Creation complete after 38s [id=fhmlqsc2j7djcgmtecrt]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
++ true
+++ jq -r '.resources[].instances[].attributes.network_interface[].nat_ip_address' terraform.tfstate
++ curl http://158.160.118.29
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
++ read -r -n1 -p 'Press Y to destroy or any key to wait: ' ans
Press Y to destroy or any key to wait: Y++ echo

++ [[ Y == \Y ]]
++ break
++ echo Destroying...
Destroying...
++ terraform destroy
yandex_compute_instance.lemp: Refreshing state... [id=fhmlqsc2j7djcgmtecrt]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  - destroy

Terraform will perform the following actions:

  # yandex_compute_instance.lemp will be destroyed
  - resource "yandex_compute_instance" "lemp" {
      - created_at                = "2025-10-28T06:27:38Z" -> null
      - folder_id                 = "b1gmesrdjgklgkvcp704" -> null
      - fqdn                      = "fhmlqsc2j7djcgmtecrt.auto.internal" -> null
      - hardware_generation       = [
          - {
              - generation2_features = []
              - legacy_features      = [
                  - {
                      - pci_topology = "PCI_TOPOLOGY_V1"
                    },
                ]
            },
        ] -> null
      - id                        = "fhmlqsc2j7djcgmtecrt" -> null
      - labels                    = {} -> null
      - metadata                  = {
          - "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAA...
            EOT
        } -> null
      - name                      = "les01-auto-lemp" -> null
      - network_acceleration_type = "standard" -> null
      - platform_id               = "standard-v1" -> null
      - status                    = "running" -> null
      - zone                      = "ru-central1-a" -> null
        # (5 unchanged attributes hidden)

      - boot_disk {
          - auto_delete = true -> null
          - device_name = "fhmp8a6fminegmevj8on" -> null
          - disk_id     = "fhmp8a6fminegmevj8on" -> null
          - mode        = "READ_WRITE" -> null

          - initialize_params {
              - block_size  = 4096 -> null
              - image_id    = "fd89eh9ba36b7cggtan6" -> null
                name        = null
              - size        = 3 -> null
              - type        = "network-hdd" -> null
                # (3 unchanged attributes hidden)
            }
        }

      - metadata_options {
          - aws_v1_http_endpoint = 1 -> null
          - aws_v1_http_token    = 2 -> null
          - gce_http_endpoint    = 1 -> null
          - gce_http_token       = 1 -> null
        }

      - network_interface {
          - index              = 0 -> null
          - ip_address         = "10.128.0.4" -> null
          - ipv4               = true -> null
          - ipv6               = false -> null
          - mac_address        = "d0:0d:15:d7:18:29" -> null
          - nat                = true -> null
          - nat_ip_address     = "158.160.118.29" -> null
          - nat_ip_version     = "IPV4" -> null
          - security_group_ids = [] -> null
          - subnet_id          = "e9bop98iu12teftg4uj8" -> null
            # (1 unchanged attribute hidden)
        }

      - placement_policy {
          - host_affinity_rules       = [] -> null
          - placement_group_partition = 0 -> null
            # (1 unchanged attribute hidden)
        }

      - resources {
          - core_fraction = 100 -> null
          - cores         = 2 -> null
          - gpus          = 0 -> null
          - memory        = 2 -> null
        }

      - scheduling_policy {
          - preemptible = false -> null
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

yandex_compute_instance.lemp: Destroying... [id=fhmlqsc2j7djcgmtecrt]
yandex_compute_instance.lemp: Still destroying... [id=fhmlqsc2j7djcgmtecrt, 00m10s elapsed]
yandex_compute_instance.lemp: Still destroying... [id=fhmlqsc2j7djcgmtecrt, 00m20s elapsed]
yandex_compute_instance.lemp: Still destroying... [id=fhmlqsc2j7djcgmtecrt, 00m30s elapsed]
yandex_compute_instance.lemp: Destruction complete after 35s

Destroy complete! Resources: 1 destroyed.
++ set +x
